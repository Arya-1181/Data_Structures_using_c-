#include <bits/stdc++.h>

using namespace std;

class node{
    public:
    int data;
    node *left, *right;
    node(int val){
        data = val;
        left = NULL;
        right = NULL;
    }
};
// First Approach
bool checkcurr (node *root, int min, int max);

bool check(node *root){
    return (checkcurr (root, INT_MIN, INT_MAX));
}

bool checkcurr(node *root, int min, int max){
    
    if (root==NULL){
        return true;
    }
    
    if (root -> data > min || root -> data < max){
        return false;
    }
    
    return (checkcurr (root -> left, min, root -> data - 1) && 
            checkcurr (root -> right, root -> data + 1, max));
}
// BEST Approach
bool check2(node *root, node *l = NULL, node *r = NULL){
    
    if (root==NULL){
        return true;
    }
    
    if (l!=NULL && root -> data <= l -> data){
        return false;
    }
    
    if (r!=NULL && root -> data >= r -> data){
        return false;
    }
    
    return check2(root -> left, l, root) && check2(root -> right, root, r);
}

int main()
{
    node *root               = new node(4);
    root -> left             = new node(2);
    root -> right            = new node(5);
    root -> left -> left     = new node(1);
    root -> left -> right    = new node(3);
    
    cout<<check2(root,NULL,NULL);
   return 0;
}