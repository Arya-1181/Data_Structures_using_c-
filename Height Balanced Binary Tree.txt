#include <bits/stdc++.h>

using namespace std;

struct node{
    int data;
    node *left , *right;
    
    node (int val){
        data = val;
        left = NULL;
        right = NULL;
    }
};

/*
         1
       /   \
      2     3
     / \   / \ 
    4   5  6  7
    
*/

void print(node *root){
    if (root==NULL){
        return;
    }
    cout<<root -> data<<"  ";
    print (root -> left);
    print (root -> right);
}



int height(node *root){
    if (root == NULL){
        return 0;
    }
    int lh = height(root -> left);
    int rh = height(root -> right);
    
    return max(lh,rh) + 1;
}

bool balanced (node *root){
    if (root==NULL){
        return true;
    }
    
    if (balanced (root -> left) == false){
        return false;
    }
    if (balanced (root -> right) == false){
        return false;
    }
    int lh = height(root -> left);
    int rh = height(root -> right);
    if (abs (lh - rh) <= 1){
        return true;
    }
    else{
        return false;
    }
}

int main()
{
   node *root = new node(1);
   
   root -> left = new node(2);
   root -> right = new node(3);
   
   root -> left -> left = new node(4);
   root -> left -> right = new node(5);
   
   root -> right -> left = new node(6);
   root -> right -> right = new node(7);
   
   print(root);
   cout<<endl;
   sum(root);
   print(root);
   cout<<endl;
   cout<<balanced(root);
   return 0;
}