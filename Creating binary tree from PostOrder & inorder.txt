#include <iostream>

using namespace std;

struct node{
    public:
    int data;
    node *left , *right;
    
    node (int val){
        data = val;
        left = NULL;
        right = NULL;
    }
};

void print(node *root){
    if (root==NULL)
    return;
    
    print(root->left);
    cout<<root -> data<<"  ";
    print(root -> right);
}

int search (int in[] , int start, int end, int val){
    for (int i=start; i<=end; i++){
        if (in[i]==val)
        return i;
    }
    return -1;
}

node *build_tree(int post[] , int in[], int start, int end){
    static int idx = 4;
    
    if (start > end){
        return NULL;
    }
    
    int val = post[idx];
    idx--;
    
    node *curr = new node(val);
    
    if (start==end){
        return curr;
    }
    
    int pos = search(in , start, end, val);
    
    curr -> right = build_tree(post, in, pos +1, end);
    curr -> left = build_tree(post, in, start, pos-1);
    
    return curr;
}

int main(){
    int post[] = {4,2,5,3,1};
    int in[] = {4,2,1,5,3};
    
    node *root = build_tree (post, in, 0, 4);
    print(root);
}