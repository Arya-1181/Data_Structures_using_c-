#include <bits/stdc++.h>

using namespace std;

struct node{
    int data;
    node *left, *right , *next;
    
    node (int val){
        data = val;
        left = NULL;
        right = NULL;
        next = NULL;
    }
};

void connect (node *root){
    if (root == NULL){
        return;
    }
    queue <node*> q;
    q.push(root);
    while (!q.empty()){
        int s = q.size();
        node *prev = NULL;
        while (s--){
            node *temp = q.front();
            q.pop();
            
            if (temp -> left){
                q.push(temp -> left);
            }
            
            if (temp -> right){
                q.push(temp -> right);
            }
            
            if (prev!=NULL){
                prev -> next = temp;
            }
            prev = temp;
        }
        prev -> next = NULL;
    }
}


int main()
{
   node *root = new node(1);
   
   root -> left = new node(2);
   root -> right = new node(3);
   
   root -> left -> left = new node(4);
   root -> left -> right = new node(5);
   
   root -> right -> left = new node(6);
   root -> right -> right = new node(7);
   
   
   node *root2 = new node (3);
   
   root2 -> left = new node(6);
   root2 -> right = new node(7);
   
   cout<<subtree(root , root2);
   
   connect(root);
   
   return 0;
}