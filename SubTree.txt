#include <iostream>

using namespace std;

struct node{
    int data;
    node *left, *right;
    
    node (int val){
        data = val;
        left = NULL;
        right = NULL;
    }
};

bool identical (node *root1 , node *root2){
    if (root1 == NULL && root2 == NULL){
        return true;
    }
    
    if (root1 == NULL || root2 == NULL){
        return false;
    }
    
    return (root1 -> data == root2 -> data && identical (root1 -> left, root2 -> left) && identical (root1 -> right , root2 -> right));
}

bool subtree (node *T ,  node *S){
    if (S == NULL){
        return true;
    }
    
    if (T == NULL){
        return false;
    }
    if (identical(T,S)){
        return true;
    }
    return (subtree(T -> left , S) || subtree (T -> right , S));
}

int main()
{
   node *root = new node(1);
   
   root -> left = new node(2);
   root -> right = new node(3);
   
   root -> left -> left = new node(4);
   root -> left -> right = new node(5);
   
   root -> right -> left = new node(6);
   root -> right -> right = new node(7);
   
   
   node *root2 = new node (3);
   
   root2 -> left = new node(6);
   root2 -> right = new node(7);
   
   cout<<subtree(root , root2);
   
   return 0;
}