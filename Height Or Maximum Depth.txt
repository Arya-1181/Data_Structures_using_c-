#include <bits/stdc++.h>

using namespace std;

struct node{
    public:
    int data;
    node *left , *right;
    
    node (int val){
        data = val;
        left = NULL;
        right = NULL;
    }
};

int height_or_maxDepth (node *root){
    if (root==NULL){
        return -1;
    }
    int max = 0;
    queue <node*> q;
    q.push(root);
    q.push(NULL);
    while (!q.empty()){
        node *curr = q.front();
        q.pop();
        if (curr!=NULL){
            if (curr -> left) q.push(curr -> left);
            if (curr -> right) q.push(curr -> right);
        }
        else if (curr==NULL && !q.empty()){
            max++;
            q.push(NULL);
        }
    }
    return max;
}

int depth (node *root){
    if (root==NULL){
        return 0;
    }
    else{
        int ldepth = depth(root -> left);
        int rdepth = depth(root -> right);
        
        if (ldepth>rdepth){
            return ldepth+1;
        }
        else
        return rdepth+1;
    }
    return 0;
}
int main(){
    
    node *root = new node(1);
    root -> left = new node(2);
    root -> right = new node(3);
    
    root -> left -> left = new node(4);
    root -> left -> right = new node(5);
    
    root -> right -> left = new node(6);
    root -> right -> right = new node(7);

//    cout<<height_or_maxDepth(root)<<endl;
    cout<<depth(root);
    return 0;
}