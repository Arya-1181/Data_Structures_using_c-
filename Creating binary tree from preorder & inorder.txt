#include <bits/stdc++.h>

using namespace std;

struct node{
    public:
    int data;
    node *left, *right;
    
    node (int val){
        data = val;
        left = NULL;
        right = NULL;
    }
};

int search (int in[], int start, int end, int curr){
    for (int i=start; i<=end; i++){
        if (in[i] == curr){
            return i;
        }
    }
    return -1;
}

node *build_tree(int pre[] , int in[] , int start , int end){
    static int idx = 0;
    
    if (start>end){
        return NULL;
    }
    
    int curr = pre[idx];
    idx++;
    node *root = new node(curr);
    
    if (start == end){
        return root;
    }
    
    int pos = search(in , start , end, curr);
    root -> left = build_tree (pre , in, start, pos - 1);
    root -> right = build_tree (pre, in, pos + 1 , end);
    
    return root;
}

void print(node *root){
    
    if (root==NULL){
        return;
    }
    
    print(root-> left);
    cout<<root -> data<<"  ";
    print(root -> right);
}

int main(){
    
    int pre[] = {1,2,4,3,5};
    
    int in[] = {4,2,1,5,3};
    
    node *root = build_tree(pre , in, 0, 4);
    
    print(root);
    
    return 0;
}